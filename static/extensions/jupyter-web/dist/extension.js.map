{"version":3,"sources":["webpack://nbpreviewer/webpack/bootstrap","webpack://nbpreviewer/webpack/runtime/compat get default export","webpack://nbpreviewer/webpack/runtime/define property getters","webpack://nbpreviewer/webpack/runtime/hasOwnProperty shorthand","webpack://nbpreviewer/webpack/runtime/make namespace object","webpack://nbpreviewer/external \"vscode\"","webpack://nbpreviewer/./src/extension.js"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","require","async","uri","authority","owner","repo","ref","split","filter","Boolean","path","enableScripts","retainContextWhenHidden","webview","html","console","log","reason","error","e","fileName","substr"],"mappings":"mBACA,IAAIA,EAAsB,CCA1B,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,GCLR,EAAwB,CAACI,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3E,EAAwB,CAACM,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClF,EAAyBT,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,M,YCLvD,MAAM,EAA+BC,QAAQ,U,aCE7C,6BAAgC,uBAAuBC,eAAgBC,GACtE,IACC,MAAMC,QAAkB,4BACvB,mCAGMC,EAAOC,EAAMC,IAAQH,GAAa,IAAII,MAAM,KAAKC,OAAOC,SACzDC,EAAOR,EAAIQ,KAIH,8BACb,cACA,6BACA,mBACA,CAAEC,eAAe,EAAMC,yBAAyB,IAE3CC,QAAQC,KAAO,opBAiBoCV,KAASC,UAAaC,IAAMI,qDAIrFK,QAAQC,IAAI,gCACX,MAAOC,GACRF,QAAQG,MAAMD,GACd,4BACC,qDAKH,qCAAwCE,IAEC,WADXA,EAAEC,SACNC,QAAQ,IAChC,4BAA+B,sBAAuBF,EAAEjB,Q","file":"extension.js","sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"vscode\");;","import vscode from 'vscode';\n\nvscode.commands.registerCommand('jupyter.showPreview', async function (uri) {\n\ttry {\n\t\tconst authority = await vscode.commands.executeCommand(\n\t\t\t'github1s.get-current-authority'\n\t\t);\n\t\t// TODO: It may not work fine when there are special characters in `ref` or `path`\n\t\tconst [owner, repo, ref] = (authority || '').split('+').filter(Boolean);\n\t\tconst path = uri.path;\n\n\t\t// const success = await vscode.commands.executeCommand('vscode.previewHtml', previewUri, vscode.ViewColumn.Two, 'IPython Notebook Preview');\n\t\t// Create and show panel\n\t\tconst panel = vscode.window.createWebviewPanel(\n\t\t\t'nbpreviewer',\n\t\t\t'Jupyter Notebook Previewer',\n\t\t\tvscode.ViewColumn.Two,\n\t\t\t{ enableScripts: true, retainContextWhenHidden: true }\n\t\t);\n\t\tpanel.webview.html = `\n            <style>\n                .vscode-dark {\n                    padding: 0px !important;\n                }\n                #menubar {\n                    display : none !important;\n                }\n                .nbviewer {\n                    padding-top: 0px !important ;\n                }\n            </style>\n            <iframe\n                class=\"ifrm\"\n                style=\"height: 100vh; width: 100vw; padding: 0px;\"\n                class=\"webview ready\"\n                sandbox=\"allow-scripts allow-same-origin allow-forms allow-pointer-lock allow-downloads\"\n                src=\"https://nbviewer.jupyter.org/github/${owner}/${repo}/blob/${ref}${path}\"\n            >\n            </iframe>\n        `;\n\t\tconsole.log('successfully showed notebook');\n\t} catch (reason) {\n\t\tconsole.error(reason);\n\t\tvscode.window.showErrorMessage(\n\t\t\t'An error occured while rendering the Notebook'\n\t\t);\n\t}\n});\n\nvscode.workspace.onDidOpenTextDocument((e) => {\n\tconst currnetFileExtension = e.fileName;\n\tif (currnetFileExtension.substr(-6) === '.ipynb') {\n\t\tvscode.commands.executeCommand('jupyter.showPreview', e.uri);\n\t}\n});\n"],"sourceRoot":""}